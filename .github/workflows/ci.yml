name: CI/CD Pipeline

on:
  push:
    branches:
      - main
    paths-ignore:
      - 'helm/**'
      - 'k8s/**'
      - 'README.md'

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '~1.22.0'
        check-latest: true

    - name: Cache Go modules
      uses: actions/cache@v3
      with:
        path: |
          ~/go/pkg/mod
          ./.bin
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-

    - name: Build
      run: go build -v ./...

    - name: Test
      run: go test -v -race ./...

  lint:
    runs-on: ubuntu-latest
    needs: build-and-test
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '~1.22.0'

    - name: Run golangci-lint
      uses: golangci/golangci-lint-action@v4
      with:
        version: v1.57.2
        working-directory: ./
        args: --timeout=5m --out-format=github-actions --skip-dirs-use-default
        skip-cache: true  # Avoids cache-related 503 errors

  docker-build-push:
    runs-on: ubuntu-latest
    needs: [build-and-test, lint]
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Login to DockerHub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Build and Push
      uses: docker/build-push-action@v5
      with:
        context: .
        push: ${{ github.ref == 'refs/heads/main' }}
        tags: |
          ${{ secrets.DOCKERHUB_USERNAME }}/go-web-app:${{ github.sha }}
          ${{ secrets.DOCKERHUB_USERNAME }}/go-web-app:latest
        cache-from: type=gha
        cache-to: type=gha,mode=max
        build-args: |
          BUILDKIT_INLINE_CACHE=1

  update-helm-chart:
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    needs: docker-build-push
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        fetch-depth: 0

    - name: Install yq
      run: |
        sudo wget https://github.com/mikefarah/yq/releases/latest/download/yq_linux_amd64 -O /usr/bin/yq
        sudo chmod +x /usr/bin/yq

    - name: Update Helm chart
      run: |
        yq eval -i '.image.tag = "${{github.sha}}"' helm/go-web-app-chart/values.yaml
        
    - name: Commit changes
      run: |
        git config user.email "actions@github.com"
        git config user.name "GitHub Actions"
        git add helm/go-web-app-chart/values.yaml
        git commit -m "CI: Update image tag to ${{ github.sha }}"
        git push